<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class compras_model extends CI_Model {
	
	public function getProductos() {
		$this->db->select('productos.*');
		$this->db->from('productos');
		$this->db->where('productos.estado', '1');
		$resultados = $this->db->get();
		return $resultados->result();
	}

	public function getProducto($id){
		$this->db->where("id", $id);
		$resultado = $this->db->get("productos");
		return $resultado->row();
	}

	//Acá hago los joins correspondientes para traer los productos y proveedores de acuerdo a su categoria.
	public function elegir_producto($productos) {
		$this->db->select('productos.*, producto.nombre as product');
		$this->db->from('productos');
		$this->db->where('productos.estado', '1');
		$this->db->where('productos.id', $productos);
		$resultados = $this->db->get();
		return $resultados->result();
	}

	public function guardarCompra($productoid, $cantidad)
{
    // Obtener el precio de venta y stock mínimo del producto
    $this->db->select('precio_venta, stock_minimo');
    $this->db->from('productos');
    $this->db->where('id', $productoid);
    $query = $this->db->get();
    $producto = $query->row();

    if ($producto) {
        // Calcular el monto total
        $montoTotal = $producto->precio_venta * $cantidad;

        // Obtener la fecha actual
        $fecha = date('Y-m-d'); // Formato: AAAA-MM-DD

        // Crear un array con los datos de la compra
        $data = array(
            'producto_id' => $productoid,
            'precio_unitario' => $producto->precio_venta,
            'cantidad' => $cantidad,
            'monto_total' => $montoTotal,
            'fecha' => $fecha
        );

        // Insertar los datos en la tabla 'compras'
        $this->db->insert('compras', $data);

        // Actualizar el stock mínimo del producto
        $nuevoStockMinimo = $producto->stock_minimo - $cantidad;
        $this->db->set('stock_minimo', $nuevoStockMinimo);
        $this->db->where('nombre', $pnombre);
        $this->db->update('productos');

        // Verificar si la inserción y actualización fueron exitosas y devolver el ID de la compra
        if ($this->db->affected_rows() > 0) {
            return $this->db->insert_id();
        } else {
            return false;
        }
    } else {
        return false;
    }
}
	
}
